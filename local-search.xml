<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[블록체인] 타원곡선</title>
    <link href="/2021/03/10/post2/"/>
    <url>/2021/03/10/post2/</url>
    
    <content type="html"><![CDATA[<h2 id="블록체인-타원곡선"><a href="#블록체인-타원곡선" class="headerlink" title="[블록체인] 타원곡선"></a>[블록체인] 타원곡선</h2><p><img src="/img/contents/illon.jpg"></p></br><h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>블록체인에서 어떤 누군가가 발행한 것이며 이를 어떻게 검증할 것인가에 관한 문제는 신뢰성이 보장되야하는 기록에서는 매우 중요한 요소 중 하나로 볼 수 있다. 정보 시스템 상에서 이러한 문제를 해결하기 위해서는 암호화가 도입되며 블록체인에서는 타원곡선암호화(ECC)가 활용된다. 이러한 수학적 원리를 이해하여 기초하기 위해서는 타원곡선에 대한 이해가 필요하다. 다음 글에서는 타원곡선에 대해서 다룬다.</p></br><h2 id="타원곡선"><a href="#타원곡선" class="headerlink" title="타원곡선"></a>타원곡선</h2><p><img src="/img/contents/tawon.png"></p></br><blockquote><p>$y^2 &#x3D; x^3 + ax + b$</p></blockquote></br><p>타원곡선은 상단의 기재된 식과 같은 형태를 의미한다. 기초적인 직교좌표계를 이해할 경우 다음과 같은 형태로 그려진다는 것은 직관적으로 파악할 수 있다. </p></br><blockquote><p>$y^2 &#x3D; x^3 + 7$</p></blockquote></br><p>계수 a&#x3D;0, b&#x3D;7일 경우를 특정할 수 있는데 이는 비트코인에서 사용되는 타원곡선 $secp256k1$ 을 의미한다.</p></br><h2 id="타원곡선상의-점-덧셈"><a href="#타원곡선상의-점-덧셈" class="headerlink" title="타원곡선상의 점 덧셈"></a>타원곡선상의 점 덧셈</h2><p><img src="/img/contents/9997934C5AD31B3B3F.jpg"></p><p>타원곡선 상의 점에서 덧셈을 정의할 수 있다. 타원곡선의 경우 일반적으로 하나의 직선과 세점에서 만나는 것을 고려할 수 있다. 이러한 특성을 이용하여 점의 덧셈을 정의할 수 있다.</p><blockquote><ol><li>두 점 P와 Q를 지나가는 직선이 타원곡선과 새롭게 만나는 점을 찾는다.</li><li>해당 점을 x축에 대해서 대칭을 시킨다.</li></ol></blockquote><p>다음과 같은 과정을 통해 얻어진 점이 점덧셈의 결과값으로 볼 수 있다. 의문이 들수도 있지만 일단 다음과 같은 형태로만 생각해보자.</p></br><h2 id="점-덧셈-성질"><a href="#점-덧셈-성질" class="headerlink" title="점 덧셈 성질"></a>점 덧셈 성질</h2><p>일반적인 덧셈 연산에서 적용되는 성질이 점 덧셈 연산에서도 지니고 있다.</p><blockquote><ol><li>항등원이 존재한다.</li><li>역원이 존재한다.</li><li>교환법칙이 성립한다.</li><li>결합법칙이 성립한다.</li></ol></blockquote><p>해당 성질 중 1, 2의 경우는 직관적으로 받아들이기 위해서는 어느정도의 약속처럼 이해를 해야한다. 그러므로 1,2의 경우에 대해서 먼저 기재하도록 하겠다.</p></br><p>항등원이란 연산을 취하였을 경우 원래의 값이 산출되는 경우를 의미하며, 역원이란 연산을 취하였을 경우 항등원이 산출되는 것을 의미한다.</p></br><blockquote><p>$A + I &#x3D; A$<br>$A + (-A) &#x3D; I$</p></blockquote></br><p><img src="/img/contents/elliptic-curve-inf.png"></p><p>다음의 그림을 통해 타원곡선에서의 점 덧셈의 항등원과 역원에 대한 이해를 보다 직관적으로 할 수 있다. 다음의 경우를 생각하면 Q를 -P라고 볼 수 있으며 두 점을 더한 값은 두 점을 지나는 직선을 고려해야한다. 해당 직선의 경우 y축과 평행하며 무한히 발산하는 곳에 위치한다고 생각할 수 있다. (사실 타원곡선과는 만나지는 않지만)</p><p>그러므로 해당 점을 무한원점$^{point at infinity}$라고 부른다.</p></br><blockquote><p>타원곡선 점 덧셈에서의 항등원 I는 무한원점$^{point at infinity}$이다.</p></blockquote></br></br><p>해당 성질 중 3, 4의 경우는 매우 직관적이다. 교환법칙의 경우는 그래프 상에서 서로 다른 두 점을 더하는 경우를 생각하는 경우를 고민하면 직관적으로 이해할 수 있다. 결합법칙의 경우는 $(A+B)+C &#x3D; A+(B+C)$가 성립한다고 볼 수 있다.</p></br><h2 id="점-덧셈-서로-다른-두-점의-덧셈"><a href="#점-덧셈-서로-다른-두-점의-덧셈" class="headerlink" title="점 덧셈 - 서로 다른 두 점의 덧셈"></a>점 덧셈 - 서로 다른 두 점의 덧셈</h2><p>서로 다른 두 점의 덧셈의 결과는 타원곡선과 접선의 방정식을 통해서 공식을 유도할 수 있다. </p></br><p>$P_1 &#x3D; (x_1, y_1),  P_2 &#x3D; (x_2, y_2),  P_3 &#x3D; (x_3, y_3)$</p><p>$P_1 + P_2 &#x3D; P_3$</p><p>$m &#x3D; (y_2 - y_1) &#x2F; (x_2 - x_1)$</p></br><p>다음과 더하고자 하는 두 개의 점의 값을 알 수 있고 이를 통해서 직선을 유도할 수 있다. </p></br><p>$y &#x3D; m(x - x_1) + y_1$</p></br><p>해당 직선을 타원곡선에 대입한다.</p></br><p>$y^2 &#x3D; x^3 + ax + b$</p></br><p>공식을 유도하는 방법에 대해서는 제시했고 세부적인 전개의 경우는 생략하도록 하겠다.</p><p>결과적으로 다음과 같이 점 덧셈 연산의 결과를 공식으로 표현할 수 있다.</p></br><p>$x_3 &#x3D; m^2 - x_1 - x_2$<br>$y_3 &#x3D; -(m(x_3 - x_1) + y_1) &#x3D; s(x_1 - x_3) - y_1$</p></br><h2 id="점-덧셈-두-점이-동일할-경우-P-1-x3D-P-2-y-neq0"><a href="#점-덧셈-두-점이-동일할-경우-P-1-x3D-P-2-y-neq0" class="headerlink" title="점 덧셈 - 두 점이 동일할 경우($P_1 &#x3D; P_2, y\neq0$)"></a>점 덧셈 - 두 점이 동일할 경우($P_1 &#x3D; P_2, y\neq0$)</h2><p><img src="/img/contents/99DDA9495AD3201428.png"></p><p>두 점이 동일할 경우는 다음과 같은 형태로 볼 수 있다. 타원곡선과 만나는 접선을 의미한다.</p><p>두 점이 동일하다는 것은 $x_1 &#x3D; x_2, y_1 &#x3D; y_2$라는 것을 고려할 수 있다.</p></br><p>$x_3 &#x3D; m^2 - x_1 - x_2$<br>$y_3 &#x3D; -(m(x_3 - x_1) + y_1) &#x3D; m(x_1 - x_3) - y_1$</p></br><p>앞서 구한 공식에서 두 점이 동일한 것을 고려해서 대입하면 </p></br><p>$x_3 &#x3D; m^2 - 2x_1$<br>$y_3 &#x3D; m(x_1 - x_3) - y_1$</p></br><p>다음과 같은 결과를 산출할 수 있다. 기울기 m의 경우는 미분을 통해서 얻을 수 있다.</p></br><h2 id="점-덧셈-두-점이-동일할-경우-P-1-x3D-P-2-y-x3D-0"><a href="#점-덧셈-두-점이-동일할-경우-P-1-x3D-P-2-y-x3D-0" class="headerlink" title="점 덧셈 - 두 점이 동일할 경우($P_1 &#x3D; P_2, y&#x3D;0$)"></a>점 덧셈 - 두 점이 동일할 경우($P_1 &#x3D; P_2, y&#x3D;0$)</h2><p>다음과 같은 경우를 생각할 수 있다. 타원곡선 자갈치 모양의 머리 부분(?)에서 점이 접할 경우는 $P_1 &#x3D; P_2$ 이면서 y 좌표가 0인 경우로 볼 수 있다. 해당 경우에는 기울이가 무한하다고 볼 수 있다. 일반적이지 않은 예외상황이므로 다음의 경우는 점 덧셈의 연산결과는 무한원점$^{point at infinity}$이라고 약속하겠다.</p></br><h2 id="한줄평"><a href="#한줄평" class="headerlink" title="한줄평"></a>한줄평</h2><div class="code-wrapper"><pre><code class="hljs">자갈치가 타원곡선 암호화의 기초가 된다니, 어떻게...</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blockchain</tag>
      
      <tag>elliptic-curve</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[블록체인] 유한체</title>
    <link href="/2021/03/09/page/"/>
    <url>/2021/03/09/page/</url>
    
    <content type="html"><![CDATA[<h2 id="블록체인-유한체"><a href="#블록체인-유한체" class="headerlink" title="[블록체인] 유한체"></a>[블록체인] 유한체</h2><p><img src="/img/contents/illon.jpg"></p></br><h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>블록체인에서 어떤 누군가가 발행한 것이며 이를 어떻게 검증할 것인가에 관한 문제는 신뢰성이 보장되야하는 기록에서는 매우 중요한 요소 중 하나로 볼 수 있다. 정보 시스템 상에서 이러한 문제를 해결하기 위해서는 암호화가 도입되며 블록체인에서는 타원곡선암호화(ECC)가 활용된다. 이러한 수학적 원리를 이해하여 기초하기 위해서는 유한체에 대한 이해가 필요하다. 다음 글에서는 유한체에 대해서 다룬다.</p></br><h2 id="유한체-정의"><a href="#유한체-정의" class="headerlink" title="유한체 정의"></a>유한체 정의</h2><p>유한체를 직관적으로 이해하기 위해서는 기초 수학 중 하나인 덧셈과 곱셈의 성질을 생각해볼 필요가 있다. 유한체는 원소수를 유한하게 가지는 집합을 의마하며 모두 덧셈과 곱셈에 대해서 닫혀있다고 볼 수 있다. 이를 엄밀히 정리한다.</p><blockquote><ol><li>a와 b가 집합에 속해있을 경우, a+b와 a·b도 집합 안에 있다.</li><li>집합에 0으로 표기하는 원소가 존재하고 집합 내 다른 원소 a와 + 연산 결과는 a다. ( + 연산에 대한 항등원 존재)</li><li>집합에 1로 표기하는 원소가 존재하고 집합 내 다른 원소 a와 · 연산 결과는 a다. ( · 연산에 대한 항등원 존재)</li><li>집합의 원소 a와 + 연산 결과가 0이 되게하는 원소 b가 집합에 속해있다. ( + 연산에 대한 역원 존재)</li><li>0이 아닌 집합의 원소 a에 대해 a·b&#x3D;1이 되게하는 원소 b가 집합에 속해있다. ( · 연산에 대한 역원 존재)</li></ol></blockquote><p>앞서 기재된 정의에 만족하는 집합을 예시로 {0,1,2}, {-1,0,1}을 대입하여 생각해보면 보다 직관적으로 이해할 수 있다.</p></br><h2 id="유한집합"><a href="#유한집합" class="headerlink" title="유한집합"></a>유한집합</h2><p>유한체에서 다뤘던 집합을 고려해보면 집합의 개수가 유한하다. 그러므로 집합의 크기를 표현하는 값을 p라고 정할 수 있으며 해당 값을 집합의 위수(order)라고 부르도록 하겠다. 이러한 집합을 예시로 들면 $F_p &#x3D; {0, 1, 2, … p-1}$ 다음과 같은 예시를 들 수 있다. 그리고 앞으로는 소수(prime number)를 위수로 갖는 유한체만을 다루도록 한다.</p></br><h2 id="유한집합이-닫혀있으려면-덧셈-뺄셈-곱셈"><a href="#유한집합이-닫혀있으려면-덧셈-뺄셈-곱셈" class="headerlink" title="유한집합이 닫혀있으려면(덧셈, 뺄셈, 곱셈)"></a>유한집합이 닫혀있으려면(덧셈, 뺄셈, 곱셈)</h2><p>앞서 정의한 유한체의 경우는 $F_p &#x3D; {0, 1, 2, … p-1}$ 다음과 같다. 해당 경우를 고려하면 +연산과 ·연산에 닫혀있을 수 없다. 예시로 2 + $p-1$만 수행해도 $p+1$로 결과를 얻기에 유한체가 닫혀있다고 볼 수 없다. 그렇다면 이를 닫히게 하기 위해서는 어떤 마법을 부려야 하는가. 간단한 아이디어이지만 나는 생각하지 못했었다.</p><p>$F_{19} &#x3D; ${0, 1, 2, 3, 4, … 18} 위수 p가 19인 유한체를 고려해본다.</p></br>첫번째, $a +_{b} f = (a + b)$%19 와 같이 정의를 한다면 이는 모든 덧셈 연산에 대해서 닫혀있다.<p>두번째, $a -_{b} f &#x3D; (a - b)$%19 와 같이 정의를 한다면 이는 모든 뺄셈 연산에 대해서 닫혀있다.</p><p>(단, $-_{f}a &#x3D; $ -a % p,  예를 들어 -3%19일 경우 16으로 생각한다.)</p><blockquote><p>모든 덧셈 뺄셈 연산에 나머지 연산을 취한다.</p></blockquote></br><p>곱셈의 경우는 다음과 같은 예시로 설명하겠다.</p><p>$5·_{f}3$ &#x3D; 5 +$_{f}$5$ + _{f}$5 &#x3D; 15 % 19 &#x3D; 15</p><blockquote><p>일반적인 곱셈 후에 위수로 나머지 연산을 수행하면 된다. 거듭제곱도 마찬가지로 적용한다.</p></blockquote></br><h2 id="유한집합이-닫혀있으려면-나눗셈"><a href="#유한집합이-닫혀있으려면-나눗셈" class="headerlink" title="유한집합이 닫혀있으려면(나눗셈)"></a>유한집합이 닫혀있으려면(나눗셈)</h2><p>유한체에서의 나눗셈을 정의하기 위해서는 곱셈의 역원을 고려해야 한다. 먼저 앞서 밝힌 사실을 고려해보자.</p><p>$3 · _{f} 7 &#x3D; 21 $%19 &#x3D; 2로부터 $ 2&#x2F; _{f} 7 &#x3D; 3$이라는 등식이 성립한다.</p></br><p>이를 통해 나머지 연산의 경우를 구할 수 있다. 하지만 직접적으로 2&#x2F;$_{f}$7를 구하는 것은 어렵다.</p><blockquote><p>$n^{(p-1)}$%$p$ &#x3D; 1</p></blockquote></br><p>페르마의 소정리에 의하면 소수인 $p$와 0보다 큰 n에 대해 $n^{(p-1)}$ 은 항상 1이라는 것을 알 수 있다.<br>다음과 같은 성질에 유의하여 공식을 산출한다.</p><blockquote><p>$a &#x2F;_{f} b &#x3D; a· _{f} b ^{(p-2)}$</p></blockquote></br><p>다음의 공식을 적용하면 유한집합에서의 닫혀있는 나눗셈 연산을 수행할 수 있다.</p><h2 id="한줄평"><a href="#한줄평" class="headerlink" title="한줄평"></a>한줄평</h2><div class="code-wrapper"><pre><code class="hljs">선택과 집중, 암기는 암기, 이해는 이해, 레이텍은 어려워</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Research</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blockchain</tag>
      
      <tag>finite-field</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
